-- Get the top 5 brands by receipts scanned among users over 21
SELECT BRAND, N, RANK() OVER (ORDER BY N DESC) AS BRAND_RANK
FROM (SELECT BRAND,COUNT(DISTINCT T.RECEIPT_ID) AS N
FROM (TRANSACTIONS AS T INNER JOIN USERS AS U ON T.USER_ID = U.ID)
LEFT JOIN PRODUCTS AS P
ON T.BARCODE = P.BARCODE
WHERE CAST(U.BIRTH_DATE AS DATE) <= CAST(T.PURCHASE_DATE AS DATE) - INTERVAL '21' YEAR
 AND P.BRAND IS NOT NULL
GROUP BY P.BRAND
ORDER BY N DESC
FETCH FIRST 5 ROWS WITH TIES);

-- What is the leading brand in the Dips & Salsa category?
SELECT P.BRAND, SUM(T.FINAL_SALE) AS FINAL_SALE_SUM, SUM(T.FINAL_QUANTITY), P.CATEGORY_2
FROM TRANSACTIONS AS T
LEFT JOIN PRODUCTS AS P
ON T.BARCODE = P.BARCODE
WHERE P.CATEGORY_2 = 'Dips & Salsa'
 AND T.FINAL_SALE IS NOT NULL
 AND T.FINAL_QUANTITY > 0.0
 AND P.BRAND IS NOT NULL
GROUP BY P.BRAND,P.CATEGORY_2
ORDER BY FINAL_SALE_SUM DESC;

-- Add grouping by generation, taken from https://www.parents.com/parenting/better-parenting/style/generation-names-and-years-a-cheat-sheet-for-parents/
-- Greatest Generation: born 1901-1927
-- Silent Generation: born 1928-1945
-- Baby Boomers: born 1946-1964
-- Generation X: born 1965-1980
-- Millennials: born 1981-1996
-- Generation Z: born 1997-2010
-- Generation Alpha: born 2011-2024; site lists 2010 as start year but that overlaps with Z
-- Generation Beta: born 2025-2039, would be data error
-- added a numerical index to the strings so they sort in order
SELECT GENERATION, N, SALES_TOTAL, SALES_TOTAL/SUM(SALES_TOTAL) OVER() AS SALES_PCT
FROM(
SELECT CASE
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 1901 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 1927 THEN '0_GREATEST'
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 1928 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 1945 THEN '1_SILENT'
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 1946 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 1964 THEN '2_BABY_BOOMER'
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 1965 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 1980 THEN '3_GEN_X'
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 1981 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 1996 THEN '4_MILLENNIAL'
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 1997 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 2010 THEN '5_GEN_Z'
 WHEN EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) >= 2011 AND EXTRACT(YEAR FROM CAST(U.BIRTH_DATE AS DATE)) <= 2024 THEN '6_GEN_ALPHA'
 ELSE 'LIKELY_ERROR'
END AS GENERATION,
COUNT(*) AS N,
SUM(T.FINAL_SALE) AS SALES_TOTAL
FROM ((TRANSACTIONS AS T INNER JOIN USERS AS U ON T.USER_ID = U.ID)
INNER JOIN PRODUCTS AS P
ON T.BARCODE = P.BARCODE)
WHERE P.CATEGORY_1 = 'Health & Wellness'
AND T.FINAL_SALE IS NOT NULL
AND T.FINAL_QUANTITY > 0.0
GROUP BY GENERATION
ORDER BY GENERATION);